C51 COMPILER V9.54   PROJ                                                                  05/07/2017 14:51:10 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE PROJ
OBJECT MODULE PLACED IN .\Objects\proj.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE proj.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\proj
                    -.lst) TABS(2) OBJECT(.\Objects\proj.obj)

line level    source

   1          #include <reg932.h>
   2          #include <uart.h>
   3          
   4          #define OSC_FREQ    7372800
   5          #define MAX_DELAY      700 //(OSC_FREQ/10532)
   6          #define TEMPO     (OSC_FREQ/204800)   /* Duration of a 64th note */
   7          #define N_PAUSE        250 //(OSC_FREQ/29491)
   8          
   9          #define E3        ((OSC_FREQ/4)/164.81)  // P1,P2-allon     (61)
  10          #define F3        ((OSC_FREQ/4)/174.61)  // P1,P0-allon   (60)
  11          #define G3        ((OSC_FREQ/4)/196.00)  // P2-allon      (29)
  12          #define Ab3       ((OSC_FREQ/4)/207.65)  // P0-allon      (28)
  13          #define A3        ((OSC_FREQ/4)/220.00)  // P1,P0-Yel,Amb   (62)
  14          #define Bb3       ((OSC_FREQ/4)/233.08)  // P1,P2-Yel,Grn   (49)
  15          #define B3        ((OSC_FREQ/4)/246.94)  // P0-Yel,Amb    (30)
  16          #define C4        ((OSC_FREQ/4)/261.63)  // P2-Yel,Grn    (17)
  17          #define Db4       ((OSC_FREQ/4)/277.18)  // P1,P0-Red,Grn   (46)
  18          #define D4        ((OSC_FREQ/4)/293.67)  // P0-Red,Grn    (14)
  19          #define Eb4       ((OSC_FREQ/4)/311.13)  // P1,P2-Red,Amb   (43)
  20          #define E4        ((OSC_FREQ/4)/329.63)  // P2-Red,Amb    (11)
  21          #define F4        ((OSC_FREQ/4)/349.23)  // P1,P0-Yel,Grn   (48)
  22          #define Gb4       ((OSC_FREQ/4)/369.99)  // P1,P0-Amb,Grn   (50)
  23          #define G4        ((OSC_FREQ/4)/392.00)  // P0-Amb,Grn    (18)
  24          #define Ab4       ((OSC_FREQ/4)/415.30)  // P1,P0-Red,Yel   (44)
  25          #define A4        ((OSC_FREQ/4)/440.00)  // P0-Red,Yel    (12)
  26          #define Bb4       ((OSC_FREQ/4)/466.16)  // P1,P0-Red,Amb   (42)
  27          #define B4        ((OSC_FREQ/4)/493.88)  // P0-Red,Amb    (10)
  28          #define C5        ((OSC_FREQ/4)/523.25)  // P0-Yel,Grn    (16)
  29          #define Db5       ((OSC_FREQ/4)/554.37)  // P1, P2-Red,Grn  (47)
  30          #define D5        ((OSC_FREQ/4)/587.33)  // P2-Red,Grn    (15)
  31          #define Eb5       ((OSC_FREQ/4)/622.25)  // P1,P2-Amb,Grn   (51)
  32          #define E5        ((OSC_FREQ/4)/659.26)  // P2-Amb,Grn    (19)
  33          #define F5        ((OSC_FREQ/4)/698.46)  // P2-Yel,Amb    (31)
  34          #define Gb5       ((OSC_FREQ/4)/739.99)  // P1,P2-Yel,Amb   (63)
  35          #define G5        ((OSC_FREQ/4)/783.99)  // P2-Red,Yel    (13)
  36          #define Ab5       ((OSC_FREQ/4)/830.61)  // P1,P2-Red,Yel   (45)  
  37          #define A5        ((OSC_FREQ/4)/880.00)  // P1,P0-Grn     (38)
  38          #define Bb5       ((OSC_FREQ/4)/932.33)  // P1,P0-Yel     (36)
  39          #define B5        ((OSC_FREQ/4)/987.77)  // P1,P2-Grn     (39)
  40          #define C6        ((OSC_FREQ/4)/1046.5)  // P2-Grn (per_08) (7)
  41          #define Db6       ((OSC_FREQ/4)/1108.7)  // P1,P0-Red     (40)
  42          #define D6        ((OSC_FREQ/4)/1174.7)  // P0-Red      (8)
  43          #define Eb6       ((OSC_FREQ/4)/1244.5)  // P1,P2-Amb     (41)
  44          #define E6        ((OSC_FREQ/4)/1318.5)  // P2-Amb (per_04) (9)
  45          #define F6        ((OSC_FREQ/4)/1396.9)  // P0-Grn      (6)
  46          #define Gb6       ((OSC_FREQ/4)/1480.0)  // P1,P2-Yel     (35)
  47          #define G6        ((OSC_FREQ/4)/1568.0)  // P2-Yel (per_02) (3)
  48          #define Ab6       ((OSC_FREQ/4)/1661.2)  // P1,P0-Amb     (34)
  49          #define A6        ((OSC_FREQ/4)/1760.0)  // P0-Amb      (2)
  50          #define Bb6       ((OSC_FREQ/4)/1864.7)  // P1,P2-Red     (33)
  51          #define B6        ((OSC_FREQ/4)/1975.5)  // P2-Red (per_01) (1)
  52          #define C7        ((OSC_FREQ/4)/2093.0)  // P0-Yel      (4)
  53          #define D7        ((OSC_FREQ/4)/2349.3)  // P1        (32)
  54          
C51 COMPILER V9.54   PROJ                                                                  05/07/2017 14:51:10 PAGE 2   

  55          sbit light1 = P2^4;
  56          sbit light2 = P0^5;
  57          sbit light3 = P2^7;
  58          sbit light4 = P0^6;
  59          sbit light5 = P1^6;
  60          sbit light6 = P0^4;
  61          sbit light7 = P2^5;
  62          sbit light8 = P0^7;
  63          sbit light9 = P2^6;
  64          
  65          sbit button1 = P2^0;
  66          sbit button2 = P0^1;
  67          sbit button3 = P2^3;
  68          sbit button4 = P0^2;
  69          sbit button5 = P1^4;
  70          sbit button6 = P0^0;
  71          sbit button7 = P2^1;
  72          sbit button8 = P0^3;
  73          sbit button9 = P2^2;
  74          
  75          sbit speaker = P1^7;
  76          
  77          static bit mtxbusy;
  78          
  79          unsigned char mode;
  80          unsigned int buttonDelay;
  81                        
  82          unsigned char smStart;
  83          unsigned char smEnd;
  84          unsigned char rrStart;
  85          unsigned char rrEnd;
  86          
  87          void delay(unsigned int time);
  88          void playsound(unsigned int dur, unsigned int del);
  89          void piano(void);
  90          void uart_init (void);
  91          void uart_isr(void);
  92          void uart_transmit(char c);
  93          void playnote(char n,char d);
  94          void sdelay(int time);
  95          
  96          unsigned int  delay_t = MAX_DELAY;
  97          
  98          code int period[] = { B6,A6,G6,C7,F6,C6,D6,E6,B4,E4,
  99                                  A4,G5,D4,D5,C5,C4,G4,E5,Ab3,G3,
 100                                  B3,F5,D7,Bb6,Ab6,Gb6,Bb5,A5,B5,Db6,
 101                                  Eb6,Bb4,Eb4,Ab4,Ab5,Db4,Db5,F4,Bb3,Gb4,
 102                                  Eb5,F3,E3,A3,Gb5};
 103          int       *p_per;
 104          
 105          void main(void) {
 106   1        mode = 1;
 107   1        buttonDelay = 1000;
 108   1        
 109   1        //initialize the ports so buttons and lights work
 110   1        P2M1=0;
 111   1        P1M1=0x2F&P1M1;
 112   1        P0M1=0;
 113   1        
 114   1        uart_init(); //initialize serial stuff
 115   1        
 116   1        while(1) { //do FOREVER!!! MUWAHAHAHA
C51 COMPILER V9.54   PROJ                                                                  05/07/2017 14:51:10 PAGE 3   

 117   2          light8=0;
 118   2          
 119   2          //playnote(2, 100);
 120   2          
 121   2          //mode 1 = Smashmouth
 122   2          //mode 2 = rickroll
 123   2          //mode 3 = Piano
 124   2          
 125   2          
 126   2          //display which mode you are in
 127   2          if (mode == 1) {
 128   3            light3 = 0;
 129   3            light2 = 1;
 130   3          } else if (mode == 2) {
 131   3            light2 = 0;
 132   3            light3 = 1;
 133   3          } else if (mode == 3) {
 134   3            light2 = 0;
 135   3            light3 = 0;
 136   3          }
 137   2          
 138   2          //increment button.
 139   2          if (!button9) {
 140   3            light9 = 0;
 141   3            if (mode >= 3) {
 142   4              mode = 0;
 143   4              delay(buttonDelay);
 144   4            } else {
 145   4              mode++;
 146   4              delay(buttonDelay);
 147   4            }
 148   3            light9 = 1;
 149   3          }
 150   2          
 151   2          //decrement button
 152   2          if (!button7) {
 153   3            light7 = 0;
 154   3            if (mode <= 1) {
 155   4              mode = 3;
 156   4              delay(buttonDelay);
 157   4            } else {
 158   4              mode--;
 159   4              delay(buttonDelay);
 160   4            }
 161   3            light7 = 1;
 162   3          }
 163   2          
 164   2          //selection mode
 165   2          if (!button8) { //mode is selected
 166   3            if (mode == 1) {
 167   4              light1=0;
 168   4              uart_transmit('S');
 169   4              uart_transmit('M');
 170   4              uart_transmit('A');
 171   4              uart_transmit('S');
 172   4              uart_transmit('H');
 173   4              uart_transmit(' ');
 174   4              uart_transmit('M');
 175   4              uart_transmit('O');
 176   4              uart_transmit('U');
 177   4              uart_transmit('T');
 178   4              uart_transmit('H');
C51 COMPILER V9.54   PROJ                                                                  05/07/2017 14:51:10 PAGE 4   

 179   4              uart_transmit(' ');
 180   4              light1=1;
 181   4            } else if (mode == 2) {
 182   4              uart_transmit('R');
 183   4              uart_transmit('I');
 184   4              uart_transmit('C');
 185   4              uart_transmit('K');
 186   4              uart_transmit(' ');
 187   4              uart_transmit('R');
 188   4              uart_transmit('O');
 189   4              uart_transmit('L');
 190   4              uart_transmit('L');
 191   4              uart_transmit(' ');
 192   4            } else if (mode == 3) {
 193   4              light2=1;
 194   4              light3=1;
 195   4              light8=1;
 196   4              delay(buttonDelay);
 197   4              piano();
 198   4            }
 199   3          }
 200   2        }
 201   1      }
 202          
 203          void piano(void) {
 204   1        unsigned char play = 1; //boolean for quiting the piano mode
 205   1        light4 = 0; light5 = 0; light6 = 0; //turn on piano key lights
 206   1        while(play) {
 207   2          
 208   2          //first key
 209   2          if (!button4) {
 210   3            light4 = 1;
 211   3            playsound(5, 7);
 212   3            light4 = 0;
 213   3          }
 214   2          
 215   2          //second key
 216   2          if (!button5) {
 217   3            light5 = 1;
 218   3            playsound(5, 5);
 219   3            light5 = 0;
 220   3          }
 221   2          
 222   2          //third key
 223   2          if (!button6) {
 224   3            light6 = 1;
 225   3            playsound(5, 3);
 226   3            light6 = 0;
 227   3          }
 228   2          
 229   2          //exit button
 230   2          if (!button8) {
 231   3            light4 = 1; light5 = 1; light6 = 1;
 232   3            delay(buttonDelay);
 233   3            play = 0;
 234   3          }
 235   2        }
 236   1      }
 237          
 238          //plays a sound for a duration and del determines pitch
 239          void playsound(unsigned int dur, unsigned int del) {
 240   1        unsigned int i;
C51 COMPILER V9.54   PROJ                                                                  05/07/2017 14:51:10 PAGE 5   

 241   1        for (i=0; i<dur; i++) {
 242   2          speaker = ~speaker;
 243   2          delay(del);
 244   2        }
 245   1      }
 246          
 247          //delay for a time
 248          void delay (unsigned int time) {
 249   1        unsigned int i, j;
 250   1        for (i=0; i < time; i++) {
 251   2          for (j=0; j<5;j++) {
 252   3          }
 253   2        }
 254   1      }
 255          
 256          void uart_init (void) {
 257   1        // configure UART
 258   1        // clear SMOD0
 259   1        PCON &= ~0x40;
 260   1        SCON = 0x50;
 261   1        // set or clear SMOD1
 262   1        PCON &= 0x7F;
 263   1        PCON |= (0 << 8);
 264   1        SSTAT = 0x00;
 265   1      
 266   1        // enable break detect
 267   1        AUXR1 |= 0x40;
 268   1      
 269   1        // configure baud rate generator
 270   1        //BRGCON = 0x00;
 271   1        //BRGR0 = 0xF0;
 272   1        //BRGR1 = 0x02;
 273   1        //BRGCON = 0x03;
 274   1        EA = 1;
 275   1        ET1 = 1;
 276   1        TMOD = 0x21;
 277   1        TH1 = -3;
 278   1        TR1 = 1;
 279   1        
 280   1      
 281   1        // TxD = push-pull, RxD = input
 282   1        P1M1 = 0x02;
 283   1        P1M2 = 0x01;
 284   1      
 285   1        // initially not busy
 286   1        mtxbusy = 0;
 287   1      
 288   1        // set isr priority to 0
 289   1        IP0 = 1;
 290   1        IP0H = 1;
 291   1        
 292   1        // enable uart interrupt
 293   1        ES = 1;
 294   1        EA = 1;
 295   1      
 296   1      
 297   1      } // uart_init
 298          
 299          
 300          void uart_isr(void) interrupt 4 using 1 {
 301   1        if (RI)
 302   1        {
C51 COMPILER V9.54   PROJ                                                                  05/07/2017 14:51:10 PAGE 6   

 303   2          //do nothing upon receiving stuff
 304   2          
 305   2          // clear interrupt flag
 306   2          RI = 0;
 307   2        }
 308   1      
 309   1        if (TI)
 310   1        {
 311   2          // clear interrupt flag
 312   2          TI = 0;
 313   2          // no longer busy
 314   2          mtxbusy = 0;
 315   2        }
 316   1      }
 317          
 318          void uart_transmit(char c) {
 319   1        while(mtxbusy);
 320   1        mtxbusy = 1;
 321   1        SBUF = c;
 322   1      }
 323          
 324          // Play routine-sets p_per value used by timer1 interrupt
 325          // n used to read p_per value
 326          // d used to set duration of note
 327          void playnote(char n,char d) {
 328   1        int dur_time;
 329   1        int t;
 330   1        if (d==0)
 331   1        {
 332   2          dur_time=delay_t; // delay_t is a global variable used by simon
 333   2          t=0;
 334   2        }
 335   1        else
 336   1        {
 337   2          dur_time=TEMPO*d; // TEMPO defines speed of all songs
 338   2          t=20;         // t=20 puts a small delay between notes
 339   2        }
 340   1      
 341   1          p_per = &period[n];
 342   1      
 343   1          if( *p_per != 0 ) {
 344   2              /* Enable timer */
 345   2              TH0=-(*p_per)>>8;
 346   2              TL0=-(*p_per)&0x0ff;
 347   2              TR0=1;
 348   2              ET0=1;
 349   2          }
 350   1      
 351   1          sdelay(dur_time);
 352   1      
 353   1          /* Disable timer */
 354   1          ET0=0;
 355   1          TR0=0;
 356   1      
 357   1        if(t!=0) sdelay(t);
 358   1      }
 359          
 360          void sdelay(int time ) {
 361   1          unsigned int    i;
 362   1      
 363   1          while( time-- > 0 ) {
 364   2              for( i=0 ; i<N_PAUSE ; i++ ) ;
C51 COMPILER V9.54   PROJ                                                                  05/07/2017 14:51:10 PAGE 7   

 365   2          }
 366   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    654    ----
   CONSTANT SIZE    =     90    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
