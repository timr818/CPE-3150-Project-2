C51 COMPILER V9.54   PROJ                                                                  05/08/2017 00:41:01 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE PROJ
OBJECT MODULE PLACED IN .\Objects\proj.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE proj.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\proj
                    -.lst) TABS(2) OBJECT(.\Objects\proj.obj)

line level    source

   1          #include <reg932.h>
   2          
   3          #define OSC_FREQ    7372800
   4          
   5          #define A4        ((OSC_FREQ/4)/440.00)
   6          #define B4        ((OSC_FREQ/4)/493.88) 
   7          #define C5        ((OSC_FREQ/4)/523.25) 
   8          #define D5        ((OSC_FREQ/4)/587.33) 
   9          #define Eb5       ((OSC_FREQ/4)/622.25) 
  10          #define E5        ((OSC_FREQ/4)/659.26) 
  11          #define F5        ((OSC_FREQ/4)/698.46) 
  12          #define Gb5       ((OSC_FREQ/4)/739.99) 
  13          #define G5        ((OSC_FREQ/4)/783.99) 
  14          #define A5        ((OSC_FREQ/4)/880.00) 
  15          #define B5        ((OSC_FREQ/4)/987.77) 
  16          #define C6        ((OSC_FREQ/4)/1046.5) 
  17          #define D6        ((OSC_FREQ/4)/1174.7) 
  18          #define Eb6       ((OSC_FREQ/4)/1244.5) 
  19          #define E6        ((OSC_FREQ/4)/1318.5) 
  20          #define F6        ((OSC_FREQ/4)/1396.9) 
  21          #define G6        ((OSC_FREQ/4)/1568.0) 
  22          #define A6        ((OSC_FREQ/4)/1760.0) 
  23          #define B6        ((OSC_FREQ/4)/1975.5) 
  24          #define C7        ((OSC_FREQ/4)/2093.0) 
  25          
  26          sbit light1 = P2^4;
  27          sbit light2 = P0^5;
  28          sbit light3 = P2^7;
  29          sbit light4 = P0^6;
  30          sbit light5 = P1^6;
  31          sbit light6 = P0^4;
  32          sbit light7 = P2^5;
  33          sbit light8 = P0^7;
  34          sbit light9 = P2^6;
  35          
  36          sbit button1 = P2^0;
  37          sbit button2 = P0^1;
  38          sbit button3 = P2^3;
  39          sbit button4 = P0^2;
  40          sbit button5 = P1^4;
  41          sbit button6 = P0^0;
  42          sbit button7 = P2^1;
  43          sbit button8 = P0^3;
  44          sbit button9 = P2^2;
  45          
  46          sbit bread1 = P0^6;
  47          sbit bread2 = P1^6;
  48          sbit bread3 = P0^4;
  49          
  50          sbit speaker = P1^7;
  51          
  52          static bit mtxbusy;
  53          
  54          unsigned char mode;
C51 COMPILER V9.54   PROJ                                                                  05/08/2017 00:41:01 PAGE 2   

  55          unsigned int buttonDelay;
  56          
  57          unsigned int tempo;
  58          unsigned int freq;
  59          unsigned int dur;
  60          unsigned char lyric; //holds the lyrics to output, one char at a time
  61          unsigned char index;
  62          unsigned char index2;
  63          
  64          void delay(unsigned int time);
  65          void piano(void);
  66          void uart_init (void);
  67          void uart_isr(void);
  68          void uart_transmit(char c);
  69          void sqr_wave();
  70          void playsong(unsigned char start, unsigned char end);
  71          void notebread(char letter);
  72          void breadoff();
  73          
  74          code int notes[] = {
  75                    G5, D6, B5, B5, A5, G5, G5, C6, B5, B5, A5, A5, G5, 0, G5, D6, B5, B5, A5, A5, G5, G5, E5, D5, 0, //s
             -mash 0-24
  76                    G5, A5, C6, A5, E6, E6, D6, G5, A5, B5, G5, D6, D6, C6, B5, A5, G5, A5, B5, G5, C6, D6, B5, A5, G5, 0
             -, G5, D6, C6, 0, //rickroll 25-54
  77                    A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, D6, 0, D6, 0, D6,
             - 0, D6, 0, D6, 0, D6, 0, D6, 0, C7, 0, C7, 0, C7, 0, C7, 0, C7, 0, C7, 0, C7, 0, G5, 0, G5, 0, A5, 0, A5, 0, A5, 0, A5, 
             -0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, D6, 0, D6, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0
             -, A5, 0, A5, 0, A5, 0, A5, 0, A5, 0,
  78                    // Darude 55-162
  79                    C5, G5, C6, Eb6, C6, B5, C6, D6, C6, G5, Eb5, C5, D5, Eb5, Gb5, G5, Eb5, C5, B4, A4, C5, D5, C5 // Bo
             -nestrousle 163-185
  80                    }; 
  81                    
  82          code int duration[] = {
  83                  64, 32, 32, 64, 32, 32, 32, 64, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 64, 64, 32,
  84                  16, 16, 16, 16, 32, 32, 64, 16, 16, 16, 16, 32, 32, 32, 16, 32, 16, 16, 16, 16, 64, 32, 48, 16, 32, 32
             -, 32, 64, 64, 32,
  85                  8, 8, 8, 8, 8, 8, 8, 8, 24, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 24, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8
             -, 8, 8, 24, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 24, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 24, 8, 8, 8, 8, 8, 8, 8, 8
             -, 8, 8, 8, 8, 8, 24, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 24, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 24, 32,
  86                  32, 32, 32, 32, 64, 64, 32, 32, 64, 32, 32, 32, 32, 32, 32, 64, 32, 32, 32, 32, 32, 64, 64, 64
  87                  };
  88                      
  89          code char SmashNote[] = {'G', 'D', 'B', 'B', 'B', 'A', 'G', 'G', 'C', 'B', 'B', 'A', 'A', 'G', '#', 'G', '
             -D', 'B', 'B', 'A', 'A', 'G', 'G', 'E', 'D', '#'};
  90          
  91          //code char RRNote[] = {'G', 'A', 'C', 'A', 'E', 'E', 'D', 'G', 'A', 'B', 'G', 'D', 'D', 'C', 'B', 'A', 'G
             -', 'A', 'B','G', 'C', 'D', 'B','A', 'G', '#', 'G', 'D', 'C', '#'};
  92            
  93            
  94          code char lyrSmashMouth[] = "Somebody once told me the world is gonna owe me, I ain't the sharpest tool in
             - the shed.#";
  95          
  96          code char lyrGiveYouUp[] = { "Never gonna give you up, never gonna let you down. Never gonna run around an
             -d, desert you.#" };
  97          
  98          void main(void) {
  99   1        mode = 1;
 100   1        buttonDelay = 15000;
 101   1        
 102   1        tempo = 500;
 103   1        
C51 COMPILER V9.54   PROJ                                                                  05/08/2017 00:41:01 PAGE 3   

 104   1        TMOD = 0x21;
 105   1        EA = 1;
 106   1        ET0 = 1;
 107   1        
 108   1        //initialize the ports so buttons and lights work
 109   1        P2M1=0;
 110   1        P1M1=0x2F&P1M1;
 111   1        P0M1=0;
 112   1        
 113   1        uart_init(); //initialize serial stuff
 114   1        
 115   1        while(1) { //do FOREVER!!! MUWAHAHAHA
 116   2          light8=0;
 117   2          
 118   2          //mode 1 = Smashmouth
 119   2          //mode 2 = rickroll
 120   2          //mode 3 = Piano
 121   2          
 122   2          
 123   2          //display which mode you are in
 124   2          if (mode == 1) {
 125   3            light1 = 1;
 126   3            light3 = 0;
 127   3            light2 = 1;
 128   3          } else if (mode == 2) {
 129   3            light1 = 1;
 130   3            light2 = 0;
 131   3            light3 = 1;
 132   3          } else if (mode == 3) {
 133   3            light1 = 1;
 134   3            light2 = 0;
 135   3            light3 = 0;
 136   3          } else if (mode == 4) {
 137   3            light1 = 0;
 138   3            light2 = 1;
 139   3            light3 = 1;
 140   3          } else if (mode == 5) {
 141   3            light1 = 0;
 142   3            light2 = 1;
 143   3            light3 = 0;
 144   3          }
 145   2          
 146   2          
 147   2          //increment button.
 148   2          if (!button9) {
 149   3            light9 = 0;
 150   3            if (mode >= 5) {
 151   4              mode = 0;
 152   4              delay(buttonDelay);
 153   4            } else {
 154   4              mode++;
 155   4              delay(buttonDelay);
 156   4            }
 157   3            light9 = 1;
 158   3          }
 159   2          
 160   2          //decrement button
 161   2          if (!button7) {
 162   3            light7 = 0;
 163   3            if (mode <= 1) {
 164   4              mode = 5;
 165   4              delay(buttonDelay);
C51 COMPILER V9.54   PROJ                                                                  05/08/2017 00:41:01 PAGE 4   

 166   4            } else {
 167   4              mode--;
 168   4              delay(buttonDelay);
 169   4            }
 170   3            light7 = 1;
 171   3          }
 172   2          
 173   2          //selection mode
 174   2          if (!button8) { //mode is selected
 175   3            if (mode == 1) {
 176   4              uart_transmit('S');
 177   4              uart_transmit('M');
 178   4              uart_transmit('A');
 179   4              uart_transmit('S');
 180   4              uart_transmit('H');
 181   4              uart_transmit(' ');
 182   4              uart_transmit('M');
 183   4              uart_transmit('O');
 184   4              uart_transmit('U');
 185   4              uart_transmit('T');
 186   4              uart_transmit('H');
 187   4              uart_transmit(' ');
 188   4              
 189   4              index2 = 0;
 190   4              lyric = ' ';
 191   4              while(lyric != '#') {
 192   5                lyric = lyrSmashMouth[index2];
 193   5                uart_transmit(lyric);
 194   5                index2++;
 195   5              }
 196   4              playsong(0, 24);
 197   4            } else if (mode == 2) {
 198   4              uart_transmit('R');
 199   4              uart_transmit('I');
 200   4              uart_transmit('C');
 201   4              uart_transmit('K');
 202   4              uart_transmit(' ');
 203   4              uart_transmit('R');
 204   4              uart_transmit('O');
 205   4              uart_transmit('L');
 206   4              uart_transmit('L');
 207   4              uart_transmit(' ');
 208   4              
 209   4              
 210   4              index2 = 0;
 211   4              lyric = ' ';
 212   4              while(lyric != '#') {
 213   5                lyric = lyrGiveYouUp[index2];
 214   5                uart_transmit(lyric);
 215   5                index2++;
 216   5              }
 217   4              playsong(25, 54);
 218   4            } else if (mode == 3) {
 219   4              light2=1;
 220   4              light3=1;
 221   4              light8=1;
 222   4              delay(buttonDelay);
 223   4              piano();
 224   4            } else if (mode == 4) {
 225   4              light1 = 1;
 226   4              light8 = 1;
 227   4              uart_transmit('D');
C51 COMPILER V9.54   PROJ                                                                  05/08/2017 00:41:01 PAGE 5   

 228   4              uart_transmit('A');
 229   4              uart_transmit('R');
 230   4              uart_transmit('U');
 231   4              uart_transmit('D');
 232   4              uart_transmit('E');
 233   4              uart_transmit(' ');
 234   4              playsong(55, 162);
 235   4            } else if (mode == 5) {
 236   4              light1 = 1;
 237   4              light3 = 1;
 238   4              light8 = 1;
 239   4              uart_transmit('B');
 240   4              uart_transmit('O');
 241   4              uart_transmit('N');
 242   4              uart_transmit('E');
 243   4              uart_transmit('S');
 244   4              uart_transmit('T');
 245   4              uart_transmit('R');
 246   4              uart_transmit('O');
 247   4              uart_transmit('U');
 248   4              uart_transmit('S');
 249   4              uart_transmit('L');
 250   4              uart_transmit('E');
 251   4              uart_transmit(' ');
 252   4              playsong(163, 185);
 253   4              TR0 = 0;
 254   4            }
 255   3          }
 256   2        }
 257   1      }
 258          
 259          
 260          void piano(void) {
 261   1        unsigned char play = 1; //boolean for quiting the piano mode
 262   1        light4 = 0; light5 = 0; light6 = 0; //turn on piano key lights
 263   1        while(play) {
 264   2          if (button4 && button5 && button6) {
 265   3            TR0 = 0;
 266   3            light4=0;
 267   3            light5=0;
 268   3            light6=0;
 269   3          }
 270   2          //first key
 271   2          if (!button4) {
 272   3            freq = A4;
 273   3            dur = 5;
 274   3            TR0 = 1;
 275   3            light4=1;
 276   3          }
 277   2          
 278   2          //second key
 279   2          if (!button5) {
 280   3            freq = A5;
 281   3            dur = 5;
 282   3            TR0 = 1;
 283   3            light5=1;
 284   3          }
 285   2          
 286   2          //third key
 287   2          if (!button6) {
 288   3            freq = A6;
 289   3            dur = 5;
C51 COMPILER V9.54   PROJ                                                                  05/08/2017 00:41:01 PAGE 6   

 290   3            TR0 = 1;
 291   3            light6=1;
 292   3          }
 293   2          
 294   2          //exit button
 295   2          if (!button8) {
 296   3            light4 = 1; light5 = 1; light6 = 1;
 297   3            delay(buttonDelay);
 298   3            play = 0;
 299   3          }
 300   2        }
 301   1      }
 302          
 303          //delay for a time
 304          void delay (unsigned int time) {
 305   1        unsigned int i, j;
 306   1        for (i=0; i < time; i++) {
 307   2          for (j=0; j<5;j++) {
 308   3          }
 309   2        }
 310   1      }
 311          
 312          void uart_init (void) {
 313   1        // configure UART
 314   1        // clear SMOD0
 315   1        PCON &= ~0x40;
 316   1        SCON = 0x50;
 317   1        // set or clear SMOD1
 318   1        PCON &= 0x7F;
 319   1        PCON |= (0 << 8);
 320   1        SSTAT = 0x00;
 321   1      
 322   1        // enable break detect
 323   1        AUXR1 |= 0x40;
 324   1      
 325   1        // configure baud rate generator
 326   1        
 327   1        BRGCON = 0x00;
 328   1        BRGR0 = 0xF0;
 329   1        BRGR1 = 0x02;
 330   1        BRGCON = 0x03;
 331   1        /**/
 332   1        /*
 333   1        EA = 1;
 334   1        ET1 = 1;
 335   1        TMOD = 0x21;
 336   1        TH1 = -6;
 337   1        TR1 = 1;
 338   1        /**/
 339   1      
 340   1        // TxD = push-pull, RxD = input
 341   1        P1M1 = 0x02;
 342   1        P1M2 = 0x01;
 343   1      
 344   1        // initially not busy
 345   1        mtxbusy = 0;
 346   1      
 347   1        // set isr priority to 0
 348   1        IP0 = 1;
 349   1        IP0H = 1;
 350   1        
 351   1        // enable uart interrupt
C51 COMPILER V9.54   PROJ                                                                  05/08/2017 00:41:01 PAGE 7   

 352   1        ES = 1;
 353   1        EA = 1;
 354   1      
 355   1      
 356   1      } // uart_init
 357          
 358          
 359          void uart_isr(void) interrupt 4 using 1 {
 360   1        if (RI)
 361   1        {
 362   2          //do nothing upon receiving stuff
 363   2          
 364   2          // clear interrupt flag
 365   2          RI = 0;
 366   2        }
 367   1      
 368   1        if (TI)
 369   1        {
 370   2          // clear interrupt flag
 371   2          TI = 0;
 372   2          // no longer busy
 373   2          mtxbusy = 0;
 374   2        }
 375   1      }
 376          
 377          void uart_transmit(char c) {
 378   1        while(mtxbusy);
 379   1        mtxbusy = 1;
 380   1        SBUF = c;
 381   1      }
 382          
 383          void playsong(unsigned char start, unsigned char end) {
 384   1        
 385   1        for(index = start; index <= end; index++) {
 386   2          //display which mode you are in
 387   2          if (mode == 1) {
 388   3            light1 = 1;
 389   3            light3 = 0;
 390   3            light2 = 1;
 391   3          } else if (mode == 2) {
 392   3            light1 = 1;
 393   3            light2 = 0;
 394   3            light3 = 1;
 395   3          } else if (mode == 3) {
 396   3            light1 = 1;
 397   3            light2 = 0;
 398   3            light3 = 0;
 399   3          } else if (mode == 4) {
 400   3            light1 = 0;
 401   3            light2 = 1;
 402   3            light3 = 1;
 403   3          } else if (mode == 5) {
 404   3            light1 = 0;
 405   3            light2 = 1;
 406   3            light3 = 0;
 407   3          }
 408   2          
 409   2          //increment button.
 410   2          if (!button9) {
 411   3            light9 = 0;
 412   3            if (mode >= 5) {
 413   4              mode = 0;
C51 COMPILER V9.54   PROJ                                                                  05/08/2017 00:41:01 PAGE 8   

 414   4            } else {
 415   4              mode++;
 416   4            }
 417   3            light9 = 1;
 418   3          }
 419   2          
 420   2          delay(200);
 421   2          if (notes[index] != 0) {
 422   3            freq = notes[index];
 423   3            dur = duration[index] * tempo;
 424   3            
 425   3            if (mode == 1) {
 426   4              notebread(SmashNote[index]);
 427   4            } else if (mode == 2) {
 428   4              //notebread(RRNote[index]);
 429   4            }
 430   3              
 431   3            
 432   3            TR0 = 1;
 433   3            delay(dur);
 434   3            breadoff();
 435   3          } else if (notes[index] == 0) {
 436   3            TR0 = 0;
 437   3            dur = duration[index];
 438   3            delay(dur * 400);
 439   3          } else {
 440   3            TR0 = 0;
 441   3          }
 442   2        }
 443   1      }
 444          
 445          void breadoff() {
 446   1        bread1 = 1; bread2 = 1; bread3 = 1;
 447   1      }
 448          
 449          void notebread(char letter) {
 450   1        
 451   1        if (letter == 'A') {
 452   2          bread1 = 1; bread2 = 1; bread3 = 0;
 453   2        }
 454   1        if (letter == 'B') {
 455   2          bread1 = 1; bread2 = 0; bread3 = 1;
 456   2        }
 457   1        if (letter == 'C') {
 458   2          bread1 = 1; bread2 = 0; bread3 = 0;
 459   2        }
 460   1        if (letter == 'D') {
 461   2          bread1 = 0; bread2 = 1; bread3 = 1;
 462   2        }
 463   1        if (letter == 'E') {
 464   2          bread1 = 0; bread2 = 1; bread3 = 0;
 465   2        }
 466   1        if (letter == 'F') {
 467   2          bread1 = 0; bread2 = 0; bread3 = 1;
 468   2        }
 469   1        if (letter == 'G') {
 470   2          bread1 = 0; bread2 = 0; bread3 = 0;
 471   2        }
 472   1      }
 473          
 474          void sqr_wave() interrupt 1 {
 475   1        speaker = ~speaker;
C51 COMPILER V9.54   PROJ                                                                  05/08/2017 00:41:01 PAGE 9   

 476   1        TH0 = -(freq)>>8;
 477   1        TL0 = -(freq);
 478   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1075    ----
   CONSTANT SIZE    =    953    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
